<html>
    <head>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8" />
    <script src="https://cdn.jsdelivr.net/npm/moment@2.24.0/min/moment.min.js"></script>
	  <script src="https://cdn.jsdelivr.net/npm/chart.js@2.8.0"></script>
	  <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-streaming@1.8.0"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js" integrity="sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=" crossorigin="anonymous"></script>
	<title>Live Dashboard</title>
    </head>
    <body>
      <div>
		  <center><h1>Live Dashboard</h1>
			<p>You can filter the data with the buttons below.</p></center>
        <canvas id="myChart"></canvas>
      </div>

        <script>
var chartColors = {
	del: 'rgb(255, 99, 132)',
	post: 'rgb(255, 205, 86)',
	get: 'rgb(0,255,0)',
	put: 'rgb(54, 162, 235)'
};


function onRefresh(chart) {
	const url = 'http://localhost:3000/getLogs';
	fetch(url)
	.then((resp) => resp.json()).then((apiData) =>{
		apiData.forEach((element) => {
			chart.config.data.datasets.forEach((dataset) => {
				if(dataset.label == 'GET' && element.methodType == "GET"){
					let itHas = dataset.data.some((item) =>{ return item.x === element.timeStamp;});
					if(!itHas){
						dataset.data.push({
							x: element.timeStamp,
							y: element.responseTime
						});
					}
				}
				if(dataset.label == 'POST' && element.methodType == "POST"){
					let itHas = dataset.data.some((item) =>{ return item.x === element.timeStamp;});
					if(!itHas){
						dataset.data.push({
							x: element.timeStamp,
							y: element.responseTime
						});
					}
				}
				if(dataset.label == 'PUT' && element.methodType == "PUT"){
					let itHas = dataset.data.some((item) =>{ return item.x === element.timeStamp;});
					if(!itHas){
						dataset.data.push({
							x: element.timeStamp,
							y: element.responseTime
						});
					}
				}
				if(dataset.label == 'DELETE' && element.methodType == "DELETE"){
					let itHas = dataset.data.some((item) =>{ return item.x === element.timeStamp;});
					if(!itHas){
						dataset.data.push({
							x: element.timeStamp,
							y: element.responseTime
						});
					}
				}
			});
		}); 
	}).catch(function(error) {
  		console.log(error);
	});
}

var color = Chart.helpers.color;
var config = {
	type: 'line',
	data: {
		datasets: [{
			label: 'GET',
			backgroundColor: color(chartColors.get).alpha(0.5).rgbString(),
			borderColor: chartColors.get,
			fill: false,
			cubicInterpolationMode: 'monotone',
			data: []
		},
    {
			label: 'POST',
			backgroundColor: color(chartColors.post).alpha(0.5).rgbString(),
			borderColor: chartColors.post,
			fill: false,
			cubicInterpolationMode: 'monotone',
			data: []
		},
    {
			label: 'PUT',
			backgroundColor: color(chartColors.put).alpha(0.5).rgbString(),
			borderColor: chartColors.put,
			fill: false,
			cubicInterpolationMode: 'monotone',
			data: []
		},
    {
			label: 'DELETE',
			backgroundColor: color(chartColors.del).alpha(0.5).rgbString(),
			borderColor: chartColors.del,
			fill: false,
			cubicInterpolationMode: 'monotone',
			data: []
		}]
	},
	options: {
		title: {
			display: false,
			text: 'Live Dashboard'
		},
		scales: {
			xAxes: [{
				type: 'realtime',
				realtime: {
					duration: 3600000,
					refresh: 1000,
					delay: 2000,
					onRefresh: onRefresh,
					displayFormats: {
                        quarter: 'MMM YYYY'
                    }
				}

			}],
			yAxes: [{
				scaleLabel: {
					display: true,
					labelString: 'Response time (ms)'
				}
			}]
		},
		tooltips: {
			mode: 'nearest',
			intersect: false
		},
		hover: {
			mode: 'nearest',
			intersect: false
		}
	}
};

window.onload = function() {
	var ctx = document.getElementById('myChart').getContext('2d');
	window.myChart = new Chart(ctx, config);
};



        </script>
    </body>
</html>



